services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${HOSTNAME}/jellyfin
    volumes:
      - ${MNT_DATA}/Configs/Jellyfin:/config
      - ${MNT_DATA}/TV:/data/tvshows
      - ${MNT_DATA}/Movies:/data/movies
      - ${MNT_DATA}/Photos:/data/photos
      - ${MNT_DATA}/Music:/data/music
    devices:
      - /dev/dri/card0:/dev/dri/card0
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - 8096:8096
    restart: always

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${MNT_DATA}/Configs/Sonarr:/config
      - ${MNT_DATA}/TV:/tv
      - ${MNT_DATA}/Torrents/downloads:/downloads
    ports:
      - 8989:8989
    restart: always

  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
    volumes:
      - ${MNT_DATA}/Configs/Jackett:/config
      - ${MNT_DATA}/Torrents/downloads:/downloads
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9117:9117
    restart: always

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${MNT_DATA}/Configs/Gitea:/etc/gitea
      - ${MNT_DATA}/Gitea:/data
    ports:
      - 3000:3000
      - 2222:22
    restart: always

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${MNT_DATA}/Configs/Transmission:/config
      - ${MNT_DATA}/Torrents/downloads:/downloads
      - ${MNT_DATA}/Torrents/watch:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    volumes:
      - ${MNT_DATA}/Configs/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${MNT_METRIC_DATA}/Prometheus:/prometheus
    command:
      - "--storage.tsdb.retention.time=${METRIC_RETENTION_DAYS}"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_LOG_FILTERS=plugin.grafana-mqtt-datasource:debug
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=grafana-mqtt-datasource
    volumes:
      - ${MNT_METRIC_DATA}/Grafana:/var/lib/grafana
      - ${MNT_DATA}/Configs/Grafana/plugins:/var/lib/grafana/plugins
    ports:
      - "3001:3000"
    restart: always

networks:
  default:
    name: docker-compose-nas
